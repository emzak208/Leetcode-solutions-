64. Merge Sorted Array
Description
Given two sorted integer arrays A and B, merge B into A as one sorted array.

You may assume that A has enough space (size that is greater or equal to m + n) to hold additional elements from B. The number of elements initialized in A and B are m and n respectively.

Have you met this question in a real interview?  
Example
A = [1, 2, 3, empty, empty], B = [4, 5]

After merge, A will be filled as [1, 2, 3, 4, 5]

思路：
1. 因为A可以很大，所有从前往后会很tedius, 所有从后往前
2. 保持三个指针，i = m-1, j = n-1 , index表示新生成array的指针 = m + n - 1  
3. A,B都有值时，从最后一个数开始比较，把大的加到新生成的最后一个位置
4. 最后剩下的数组，全盘连接到新数组最后



class Solution:
    """
    @param: A: sorted integer array A which has m elements, but size of A is m+n
    @param: m: An integer
    @param: B: sorted integer array B which has n elements
    @param: n: An integer
    @return: nothing
    """
    def mergeSortedArray(self, A, m, B, n):
        while m > 0 and n > 0:
                if A[m-1] >= B[n-1]:
                    A[m+n-1] = A[m-1]
                    m -= 1
                else:
                    A[m+n-1] = B[n-1]
                    n -= 1
        ## if B left with some values: add entire to A
        if n > 0:
            A[:n] = B[:n]
